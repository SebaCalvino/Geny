name: Maker Bot schedule

on:
  schedule:
    # Corre cada 30 minutos (UTC). Ajustá si querés otra cadencia.
    - cron: "*/30 * * * *"
  workflow_dispatch:

# Además de esto, en Settings → Actions → Workflow permissions marcá "Read and write".
permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Sanity check
        shell: bash
        run: |
          python - <<'PY'
          from pathlib import Path
          print("CWD:", Path.cwd())
          print("Archivos en repo:", len(list(Path('.').rglob('*'))))
          PY

      - name: Run orchestrator (always create output + heartbeat)
        shell: bash
        run: |
          set -e
          mkdir -p output
          # Heartbeat para garantizar un diff en cada run
          date -u +"%Y-%m-%dT%H:%M:%SZ" >> output/heartbeat.txt

          if [ -f orchestrator.py ]; then
            echo "[orchestrator] ejecutando..."
            python orchestrator.py
          else
            echo "[orchestrator] NO existe orchestrator.py; generando salida mínima..."
            python - <<'PY'
            from datetime import datetime
            from pathlib import Path
            d = Path("output") / datetime.now().strftime("%Y-%m-%d")
            d.mkdir(parents=True, exist_ok=True)
            (d / "README.md").write_text("# Output\n\nPrimer run automático.\n", encoding="utf-8")
            print("Escribí:", d)
            PY
          fi

      - name: Mostrar cambios
        shell: bash
        run: |
          echo "=== git status ==="
          git status
          echo "=== Archivos recientes en output/ ==="
          ls -lah output |
