name: Maker Bot schedule

on:
  schedule:
    # corre cada 30 minutos (UTC)
    - cron: "*/30 * * * *"
  workflow_dispatch:

# üîê Asegura permisos de escritura para el push (adem√°s de Settings del repo)
permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Sanity check
        shell: bash
        run: |
          python - <<'PY'
          from pathlib import Path
          print("CWD:", Path.cwd())
          print("Repo files:", len(list(Path('.').rglob('*'))))
          PY

      - name: Run orchestrator (always create output + heartbeat)
        shell: bash
        run: |
          set -e
          mkdir -p output
          # heartbeat para garantizar un diff en cada run
          date -u +"%Y-%m-%dT%H:%M:%SZ" >> output/heartbeat.txt

          if [ -f orchestrator.py ]; then
            echo "[orchestrator] ejecutando..."
            python orchestrator.py
          else
            echo "[orchestrator] NO existe orchestrator.py; generando salida m√≠nima..."
            python - <<'PY'
            from datetime import datetime
            from pathlib import Path
            d = Path("output") / datetime.now().strftime("%Y-%m-%d")
            d.mkdir(parents=True, exist_ok=True)
            (d / "README.md").write_text("# Output\n\nPrimer run autom√°tico.\n", encoding="utf-8")
            print("Escrib√≠:", d)
            PY

      - name: Mostrar cambios
        shell: bash
        run: |
          echo "=== git status ==="
          git status
          echo "=== √öltimos archivos en output/ ==="
          ls -lah output || true
          find output -maxdepth 2 -type f | sort | tail -n 50 || true

      - name: Commit & push changes
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No hay cambios para commitear."
            exit 0
          fi

          git commit -m "chore: auto-output $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          # por si hubo cambios remotos entre checkout y este push
          git pull --rebase || true
          git push
